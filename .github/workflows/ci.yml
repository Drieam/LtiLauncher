name: CI
on: [push]
jobs:
  brakeman:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1

      - uses: actions/cache@v1
        id: cache
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-bundler-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-bundler-

      - name: Setup Ruby
        uses: eregon/use-ruby-action@master
        with:
          ruby-version: 2.7.1

      # required to compile pg ruby gem
      - name: install PostgreSQL client
        if: steps.cache.outputs.cache-hit != 'true'
        run: sudo apt-get install libpq-dev

      - name: Install gems
        run: |
          gem install bundler -v "$(grep -A 1 "BUNDLED WITH" Gemfile.lock | tail -n 1)" --no-doc
          bundle config specific_platform x86_64-linux
          bundle config --local build.sassc --disable-march-tune-native
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3

      - name: Run brakeman
        run: bundle exec brakeman

  rubocop:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1

      - uses: actions/cache@v1
        id: cache
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-bundler-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-bundler-

      - name: Setup Ruby
        uses: eregon/use-ruby-action@master
        with:
          ruby-version: 2.7.1

      # required to compile pg ruby gem
      - name: install PostgreSQL client
        if: steps.cache.outputs.cache-hit != 'true'
        run: sudo apt-get install libpq-dev

      - name: Install gems
        run: |
          gem install bundler -v "$(grep -A 1 "BUNDLED WITH" Gemfile.lock | tail -n 1)" --no-doc
          bundle config specific_platform x86_64-linux
          bundle config --local build.sassc --disable-march-tune-native
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3

      - name: Run rubocop
        run: bundle exec rubocop

  rspec:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:11
        ports:
          # will assign a random free host port
          - 5432/tcp
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        env:
          POSTGRES_HOST_AUTH_METHOD: trust

    steps:
      - uses: actions/checkout@v1

      - uses: actions/cache@v1
        id: cache
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-bundler-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-bundler-

      - name: Setup Ruby
        uses: eregon/use-ruby-action@master
        with:
          ruby-version: 2.7.1

      # required to compile pg ruby gem
      - name: install PostgreSQL client
        if: steps.cache.outputs.cache-hit != 'true'
        run: sudo apt-get install libpq-dev

      - name: Install gems
        run: |
          gem install bundler -v "$(grep -A 1 "BUNDLED WITH" Gemfile.lock | tail -n 1)" --no-doc
          bundle config specific_platform x86_64-linux
          bundle config --local build.sassc --disable-march-tune-native
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3

      - name: Run RSpec
        env:
          # use localhost for the host here because we have specified a container for the job.
          # If we were running the job on the VM this would be postgres
          DATABASE_HOST: localhost
          DATABASE_USERNAME: postgres
          DATABASE_PORT: ${{ job.services.postgres.ports[5432] }} # get randomly assigned published port
          RAILS_ENV: test
        run: |
          bin/rake db:setup
          bundle exec rspec --format RSpec::Github::Formatter
